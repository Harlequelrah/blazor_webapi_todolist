@page "/register"
@using test.Services
@using Microsoft.AspNetCore.Components.Forms
@inject HttpClient Http
@inject NavigationManager Navigation

@if (errorMessages.Count > 0)
{
    <div class="alert alert-danger">
        <ul>
            @foreach (var error in errorMessages)
            {
                <li>@error</li>
            }
        </ul>
    </div>
}

<EditForm Model="user" OnValidSubmit="HandleRegistration" FormName="registerForm">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div>
        <label>Username:</label>
        <InputText @bind-Value="user.Username" />
    </div>
    <div>
        <label>Password:</label>
        <InputText @bind-Value="user.Password" type="password" />
    </div>
    <button type="submit">Register</button>
</EditForm>

@code {
    [SupplyParameterFromForm]
    private User user { get; set; } = new User();
    private List<string> errorMessages = new List<string>();

    private async Task HandleRegistration()
    {
        errorMessages.Clear(); // Clear previous error messages

        var response = await Http.PostAsJsonAsync("http://localhost:5208/api/User/register", new { username = user.Username, password = user.Password });
        if (response.IsSuccessStatusCode)
        {
            Navigation.NavigateTo("/login");
        }
        else
        {
            var errorResponse = await response.Content.ReadFromJsonAsync<ErrorResponse>();
            if (errorResponse != null && errorResponse.Errors != null)
            {
                foreach (var error in errorResponse.Errors)
                {
                    foreach (var errorMessage in error.Value)
                    {
                        errorMessages.Add(errorMessage); // Add error messages to the list
                    }
                }
            }
            else
            {
                errorMessages.Add("An unknown error occurred.");
            }
        }
    }

    public class User
    {
        public string Username { get; set; }
        public string Password { get; set; }
    }

    public class ErrorResponse
    {
        public Dictionary<string, string[]> Errors { get; set; }
        public string Type { get; set; }
        public string Title { get; set; }
        public int Status { get; set; }
        public string TraceId { get; set; }
    }
}
